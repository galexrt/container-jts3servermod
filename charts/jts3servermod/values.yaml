# Default values for jts3servermod.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: galexrt/jts3servermod
  tag: v20250327-124702-313
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsGroup: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

jts3servermod:
  #javaArgs: "-Xmx256M"
  instanceManagerCfg: |
    # JTS3ServerMod Instance Manager config file
    bot_fulladmin_list = YOUR_ADMIN_TS3_ID
    bot_command_exec = 0
    bot_update_check = 1
    1.instance_enable = 1
    1.instance_name = TS3_Bot 01
    1.instance_config_path = %apphome%config/ts3bot01/JTS3ServerMod_server.cfg
    1.instance_logfile_path = %apphome%logs/JTS3ServerMod_ts3bot01.log
    1.instance_csvloginlog_path = %apphome%logincsv/JTS3ServerMod_ts3bot01_login.csv
  bots:
    ts3bot01:
      JTS3ServerMod_server.cfg: |
        # Your TS3 bot instance config
      advertising.cfg: |
        Visit our [url=http://www.homepage.com]Homepage[/url].      
      # You can specify other config files as part of your bot(s)


## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  type: pvc
  enabled: false
  # storageClassName: default
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  # annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection
  # subPath: ""
  # existingClaim:
